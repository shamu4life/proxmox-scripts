#!/usr/bin/env bash

# Copyright (c) 2021-2025 tteck
# Author: tteck (tteckster)
# License: MIT | https://github.com/community-scripts/ProxmoxVE/raw/main/LICENSE
# Source: https://github.com/yt-dlp/yt-dlp

source <(curl -sSL https://raw.githubusercontent.com/community-scripts/ProxmoxVE/main/misc/build.func)

# Set container variables
APP="yt-dlp"
var_tags="${var_tags:-media}"
var_cpu="${var_cpu:-2}"
var_ram="${var_ram:-2048}"
var_disk="${var_disk:-10}"
var_os="${var_os:-debian}"
var_version="${var_version:-12}"
var_unprivileged="${var_unprivileged:-1}"
# This variable is set to an empty command (a colon ':') which does nothing and exits successfully.
# This will safely override the problematic final line in the build_container function.
var_install_override=':'

# Run setup
header_info
variables
color
catch_errors

# This line is the key fix. It re-assigns var_install after the 'variables' function has run.
# The original 'lxc-attach' line will now effectively run 'bash -c ":"' which is harmless.
var_install="$var_install_override"

start
build_container

# Get the container ID from Proxmox
CTID=$(pvesh get /cluster/resources --type vm --output-format json | \
  jq -r --arg NAME "$var_hostname" '.[] | select(.name==$NAME) | .vmid')

# --- Direct Installation Steps ---
msg_info "Installing yt-dlp and dependencies in LXC ${CTID}..."

# Execute the installation commands directly inside the newly created container.
# Using 'pct exec' is the standard Proxmox way to run commands in a container from the host.
pct exec $CTID -- bash -c ' \
  export DEBIAN_FRONTEND=noninteractive; \
  apt-get update && \
  apt-get install -y ffmpeg python3-pip aria2 ca-certificates git && \
  pip3 install --upgrade yt-dlp && \
  apt-get autoremove -y && \
  apt-get clean -y' || exit 1

msg_ok "Installation complete."
# --- End Direct Installation Steps ---

description

msg_ok "Completed Successfully!\n"
echo -e "${CREATING}${GN}${APP} has been successfully installed in LXC ${CTID}.${CL}"
echo -e "${INFO}${YW} You can access the container via the Proxmox console or SSH (if configured).${CL}"
